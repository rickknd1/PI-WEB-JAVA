security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider

            # Définir explicitement le point d'entrée
            entry_point: App\Security\UserAuthenticator

            custom_authenticators:
                - App\Security\UserAuthenticator

            #Configuration OAuth
            oauth:
                resource_owners:
                    google: "/login/check-google"
                login_path: /login
                use_forward: false
                failure_path: /login
                oauth_user_provider:
                    service: App\Security\GoogleUserProvider

            logout:
                path: app_logout

            pattern: ^/
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon